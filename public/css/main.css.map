{"version":3,"sources":["layout/reset.scss","layout/layout.scss","layout/grid.scss","layout/mixins.scss"],"names":[],"mappings":"AAAA;;;EAGE;AAEF;;;;;;;;;;;;;EAaC,UAAU;EACV,WAAW;EACX,UAAU;EACV,gBAAgB;EAChB,cAAc;EACd,yBAAyB,EACzB;;AACD,iDAAiD;AACjD;;EAEC,eAAe,EACf;;AACD;EACC,eAAe,EACf;;AACD;EACC,iBAAiB,EACjB;;AACD;EACC,aAAa,EACb;;AACD;;EAEC,YAAY;EACZ,cAAc,EACd;;AACD;EACC,0BAA0B;EAC1B,kBAAkB,EAClB;;AC/CD;EAGI,uBAAuB,EAC1B;;ACJD;;;;;GAKG;AFLH;;;EAGE;AAEF;;;;;;;;;;;;;EAaC,UAAU;EACV,WAAW;EACX,UAAU;EACV,gBAAgB;EAChB,cAAc;EACd,yBAAyB,EACzB;;AACD,iDAAiD;AACjD;;EAEC,eAAe,EACf;;AACD;EACC,eAAe,EACf;;AACD;EACC,iBAAiB,EACjB;;AACD;EACC,aAAa,EACb;;AACD;;EAEC,YAAY;EACZ,cAAc,EACd;;AACD;EACC,0BAA0B;EAC1B,kBAAkB,EAClB;;AExBD;EACI,eAAe;EACf,eAAe;EACf,kBAfc;EAgBd,iBAAiB;GACjB,QAAS,EAmCZ;EAxCD;IASQ,YAAY;IACZ,eAAe;IACf,eAAe,EAClB;EAZL;IAeQ,YAAY,EACf;EAhBL;IAmBQ,gBAAgB;IAChB,gBAAgB,EACnB;EArBL;;IA0BQ,YAAY;IACZ,cA7BY;IA8BZ,YAAY,EAUf;IAtCL;;MA+BY,mBAAe,EAClB;IAhCT;;MAmCY,oBAAgB,EACnB;;AAMT;;EAIQ,gBAAgB,EACnB;;AALL;;;;EAYY,gBAAgB,EACnB;;AAbT;;;;EAgBY,iBAAiB,EACpB;;AAjBT;;;;EAyBY,eAAe,EAClB;;AA1BT;;;;EA8BY,kBAAkB,EACrB;;AA/BT;;EAqCQ,2BAA2B;EAC3B,4BAA4B,EAC/B;;AAvCL;;EC9DI,qBAAyB,ED0GxB;;AA5CL;;EC9DI,sBAAyB,ED8GxB;;AAhDL;;EC9DI,WAAyB,EDkHxB;;AApDL;;EC9DI,sBAAyB,EDsHxB;;AAxDL;;EC9DI,sBAAyB,ED0HxB;;AA5DL;;EC9DI,WAAyB,ED8HxB;;AAhEL;;EC9DI,sBAAyB,EDkIxB;;AApEL;;EC9DI,sBAAyB,EDsIxB;;AAxEL;;EC9DI,WAAyB,ED0IxB;;AA5EL;;EC9DI,sBAAyB,ED8IxB;;AAhFL;;EC9DI,sBAAyB,EDkJxB;;AApFL;;EC9DI,YAAyB,EDsJxB;;AAxFL;;;EC1DI,YAAiB,ED4JhB;;AAlGL;;;EC1DI,WAAiB,EDiKhB;;AAvGL;;;EC1DI,sBAAiB,EDsKhB;;AA5GL;;;EC1DI,sBAAiB,ED2KhB;;AAjHL;;;;EC1DI,WAAiB,EDiLhB;;AAvHL;;;;EC1DI,WAAiB,EDuLhB;;AA7HL;;;EC1DI,WAAiB,ED4LhB;;AAlIL;;;EC1DI,WAAiB,EDiMhB;;AAvIL;;;EC1DI,WAAiB,EDsMhB;;AA5IL;;;EC1DI,WAAiB,ED2MhB;;AAIL;EC3MI,2BAA+B,ED+M9B;;AAJL;EC3MI,4BAA+B,EDmN9B;;AARL;EC3MI,iBAA+B,EDuN9B;;AAZL;EC3MI,4BAA+B,ED2N9B;;AAhBL;EC3MI,4BAA+B,ED+N9B;;AApBL;EC3MI,iBAA+B,EDmO9B;;AAxBL;EC3MI,4BAA+B,EDuO9B;;AA5BL;EC3MI,4BAA+B,ED2O9B;;AAhCL;EC3MI,iBAA+B,ED+O9B;;AApCL;EC3MI,4BAA+B,EDmP9B;;AAxCL;EC3MI,4BAA+B,EDuP9B;;AA5CL;ECvMI,iBAAuB,EDwPtB;;AAjDL;ECvMI,4BAAuB,ED4PtB;;AArDL;ECvMI,4BAAuB,EDgQtB;;AAzDL;ECvMI,iBAAuB,EDqQtB;;AA9DL;ECvMI,iBAAuB,ED0QtB;;AAnEL;ECvMI,iBAAuB,ED8QtB;;AAvEL;ECvMI,iBAAuB,EDkRtB;;AA3EL;ECvMI,iBAAuB,EDsRtB;;AA/EL;ECvMI,iBAAuB,ED0RtB;;AAKL;EACI,mBAAmB,EACtB;;AAED;EACI,iBAAiB,EACpB;;AAED;EACI,kBAAkB,EACrB;;AAED;EACI,YAAY,EACf;;AAGD;EACI,yBAAyB,EAC5B;;AAGD;EACI,yBAAyB,EAC5B;;AAGD;EACI,mBAAmB,EACtB;;AAMD;EAEI;;IAIQ,mBAAmB;IACnB,oBAAoB;IACpB,uBAAuB,EAC1B;EAIL;;;;IAOY,kBAAkB;IAClB,mBAAmB,EACtB;EAOT;IACI,8BAA8B,EACjC;EAED;IACI,yBAAyB,EAC5B;EAED;IACI,0BAA0B,EAC7B,EAAA;;AAKL;EAEI;;IAEI,eAAe;IACf,kBArXe,EAsXlB,EAAA;;AAKL;EAEI;;IAEI,eAAe;IACf,kBA9XgB,EA+XnB,EAAA;;AAKL;;EAEI,0BAA0B,EAC7B;;AAED;EAEI;;IAEI,0BAA0B,EAC7B,EAAA;;AAIL;EAEI;;IAEI,yBAAyB,EAC5B,EAAA;;AAIL;;EAEI,yBAAyB,EAC5B;;AAED;EAEI;;IAEI,yBAAyB,EAC5B,EAAA;;AAIL;EAEI;;IAEI,0BAA0B,EAC7B,EAAA","file":"main.css","sourcesContent":["/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n","*, *:after, *:before {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n}\n","/*\n * Pills\n * A simple, responsive, and tiny CSS grid for humans who don't like memorising all those cryptic codes like col-*-6 or something.\n * https://github.com/rohitkrai03/pills\n * Copyright 2015, Rohit Rai\n */\n\n@import \"mixins\";\n@import \"reset\";\n\n// the maximum width of the container in pixels\n$max-width: 1024px;\n\n$wide-max-width: 1180px;\n\n$wider-max-width: 1366px;\n\n// the minimum width of the container in pixels, before it switches to a mobile friendly display\n$min-width: 599px;\n\n// the padding that will be applied to both sides of a column in pixels, also known as gutter\n$padding-width: 10px;\n\n.row {\n    display: block;\n    margin: 0 auto;\n    max-width: $max-width;\n    overflow: hidden;\n    *zoom: 1;\n\n    &::before,\n    &::after {\n        content: \"\";\n        display: table;\n        line-height: 0;\n    }\n\n    &::after {\n        clear: both;\n    }\n\n    .row {\n        max-width: 100%;\n        min-width: 100%;\n    }\n\n    //This makes padding of first and last column double than normal\n    .column,\n    .columns {\n        float: left;\n        padding: $padding-width;\n        width: 100%;\n\n        &:first-of-type {\n            padding-left: 2 * $padding-width;\n        }\n\n        &:last-of-type {\n            padding-right: 2 * $padding-width;\n        }\n\n    }\n\n}\n\n.column,\n.columns {\n    // This causes the img to be resized if img is bigger than the column\n    img {\n        max-width: 100%;\n    }\n\n    // This is to make padding of nested rows or columns as zero\n    & .column,\n    & .columns {\n\n        &:first-of-type {\n            padding-left: 0;\n        }\n\n        &:last-of-type {\n            padding-right: 0;\n        }\n\n    }\n\n    & .row {\n\n        &:first-of-type > .column,\n        &:first-of-type > .columns {\n            padding-top: 0;\n        }\n\n        &:last-of-type > .column,\n        &:last-of-type > .columns {\n            padding-bottom: 0;\n        }\n\n    }\n\n    // To let people remove any padding\n    &.no-padding {\n        padding-left: 0 !important;\n        padding-right: 0 !important;\n    }\n\n    // For people who understand columns in a human way better\n    &.one {\n        @include column-width(1);\n    }\n\n    &.two {\n        @include column-width(2);\n    }\n\n    &.three {\n        @include column-width(3);\n    }\n\n    &.four {\n        @include column-width(4);\n    }\n\n    &.five {\n        @include column-width(5);\n    }\n\n    &.six {\n        @include column-width(6);\n    }\n\n    &.seven {\n        @include column-width(7);\n    }\n\n    &.eight {\n        @include column-width(8);\n    }\n\n    &.nine {\n        @include column-width(9);\n    }\n\n    &.ten {\n        @include column-width(10);\n    }\n\n    &.eleven {\n        @include column-width(11);\n    }\n\n    &.twelve {\n        @include column-width(12);\n    }\n\n    // * For people who don't like thinking of grids in columns, rather they like to think in portions of page. Like half or one third of page.\n    // * Width classes also have shorthand versions numbered as fractions\n    // * For example: for a grid unit 1/3 (one third) of the parent width,\n    // * simply apply class=\"w-1-3\" to the element.\n\n    &.whole,\n    &.w-1-1 {\n        @include fractional-column-width(1, 1);\n    }\n\n    &.half,\n    &.w-1-2 {\n        @include fractional-column-width(1, 2);\n    }\n\n    &.one-third,\n    &.w-1-3 {\n        @include fractional-column-width(1, 3);\n    }\n\n    &.two-thirds,\n    &.w-2-3 {\n        @include fractional-column-width(2, 3);\n    }\n\n    &.one-quarter,\n    &.one-fourth,\n    &.w-1-4 {\n        @include fractional-column-width(1, 4);\n    }\n\n    &.three-quarters,\n    &.three-fourths,\n    &.w-3-4 {\n        @include fractional-column-width(3, 4);\n    }\n\n    &.one-fifth,\n    &.w-1-5 {\n        @include fractional-column-width(1, 5);\n    }\n\n    &.two-fifths,\n    &.w-2-5 {\n        @include fractional-column-width(2, 5);\n    }\n\n    &.three-fifths,\n    &.w-3-5 {\n        @include fractional-column-width(3, 5);\n    }\n\n    &.four-fifths,\n    &.w-4-5 {\n        @include fractional-column-width(4, 5);\n    }\n\n}\n\n.offset {\n\n    &.by-one {\n        @include offset-margin(1);\n    }\n\n    &.by-two {\n        @include offset-margin(2);\n    }\n\n    &.by-three {\n        @include offset-margin(3);\n    }\n\n    &.by-four {\n        @include offset-margin(4);\n    }\n\n    &.by-five {\n        @include offset-margin(5);\n    }\n\n    &.by-six {\n        @include offset-margin(6);\n    }\n\n    &.by-seven {\n        @include offset-margin(7);\n    }\n\n    &.by-eight {\n        @include offset-margin(8);\n    }\n\n    &.by-nine {\n        @include offset-margin(9);\n    }\n\n    &.by-ten {\n        @include offset-margin(10);\n    }\n\n    &.by-eleven {\n        @include offset-margin(11);\n    }\n\n    // fractional offset\n    &.by-half {\n        @include fractional-offset-margin(1, 2);\n    }\n\n    &.by-one-third {\n        @include fractional-offset-margin(1, 3);\n    }\n\n    &.by-two-thirds {\n        @include fractional-offset-margin(2, 3);\n    }\n\n    &.by-one-quarter,\n    &.by-one-fourth {\n        @include fractional-offset-margin(1, 4);\n    }\n\n    &.by-three-quarters,\n    &.by-three-fourths {\n        @include fractional-offset-margin(3, 4);\n    }\n\n    &.by-one-fifth {\n        @include fractional-offset-margin(1, 5);\n    }\n\n    &.by-two-fifths {\n        @include fractional-offset-margin(2, 5);\n    }\n\n    &.by-three-fifths {\n        @include fractional-offset-margin(3, 5);\n    }\n\n    &.by-four-fifths {\n        @include fractional-offset-margin(4, 5);\n    }\n\n}\n\n// A few Utilities\n.align-center {\n    text-align: center;\n}\n\n.align-left {\n    text-align: left;\n}\n\n.align-right {\n    text-align: right;\n}\n\n.pull-left {\n    float: left;\n}\n\n// This class can be used to hide stuff on all devices except mobile\n.only-on-mobiles {\n    display: none !important;\n}\n\n// To hide some blocks on all devices. This block will not be rendered on webpage.\n.hide {\n    display: none !important;\n}\n\n// To make some blocks invisible on all devices. This block will be rendered with visibility as hidden on webpage.\n.invisible {\n    visibility: hidden;\n}\n\n\n\n\n// A few responsive titbits\n@media screen and (max-width: 599px) {\n    // This basically stacks all the columns for mobile devices. Except when you explicitly say .no-stacking-mobiles\n    .row {\n\n        &:not(.no-stacking-on-mobiles) > .column,\n        &:not(.no-stacking-on-mobiles) > .columns {\n            padding-left: 20px;\n            padding-right: 20px;\n            width: 100% !important;\n        }\n\n    }\n\n    .column,\n    .columns {\n\n        & .row {\n\n            & .column,\n            & .columns {\n                padding-left: 0px;\n                padding-right: 0px;\n            }\n\n        }\n\n    }\n\n    // Changing a few behaviours on mobile devices if you want.\n    .center-on-mobiles {\n        text-align: center !important;\n    }\n\n    .hide-on-mobiles {\n        display: none !important;\n    }\n\n    .only-on-mobiles {\n        display: block !important;\n    }\n\n}\n\n// Use .wide class for medium sized devices like laptops\n@media screen and (min-width: 1180px) {\n\n    .wide .row,\n    .row .wide {\n        margin: 0 auto;\n        max-width: $wide-max-width;\n    }\n\n}\n\n// Use .wider class for devices with even bigger resolutions like retina\n@media screen and (min-width: 1366px) {\n\n    .wider .row,\n    .row .wider {\n        margin: 0 auto;\n        max-width: $wider-max-width;\n    }\n\n}\n\n// Controlling visibility based on orientation of the device\n.show-for-landscape,\n.hide-for-portrait {\n    display: block !important;\n}\n\n@media screen and (orientation: landscape) {\n\n    .show-for-landscape,\n    .hide-for-portrait {\n        display: block !important;\n    }\n\n}\n\n@media screen and (orientation: portrait) {\n\n    .show-for-landscape,\n    .hide-for-portrait {\n        display: none !important;\n    }\n\n}\n\n.hide-for-landscape,\n.show-for-portrait {\n    display: none !important;\n}\n\n@media screen and (orientation: landscape) {\n\n    .hide-for-landscape,\n    .show-for-portrait {\n        display: none !important;\n    }\n\n}\n\n@media screen and (orientation: portrait) {\n\n    .hide-for-landscape,\n    .show-for-portrait {\n        display: block !important;\n    }\n\n}\n","// Mixins to calculate column width and offset margin\n\n@mixin column-width($number-of-columns) {\n    width: $number-of-columns / 12 * 100%;\n}\n\n@mixin fractional-column-width($numerator, $denominator) {\n    width: $numerator / $denominator * 100%;\n}\n\n@mixin offset-margin($number-of-columns) {\n    margin-left: $number-of-columns / 12 * 100%;\n}\n\n@mixin fractional-offset-margin($numerator, $denominator) {\n    margin-left: $numerator / $denominator * 100%;\n}\n"],"sourceRoot":"/source/"}